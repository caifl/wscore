//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://github.com/caifl/wscore", ConfigurationName="ServiceReference1.GreetingServiceSoap")]
    internal interface GreetingServiceSoap
    {
        
        // CODEGEN: Generating message contract since element name name from namespace https://github.com/caifl/wscore is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="https://github.com/caifl/wscore/Say", ReplyAction="*")]
        ServiceReference1.SayResponse Say(ServiceReference1.SayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://github.com/caifl/wscore/Say", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.SayResponse> SayAsync(ServiceReference1.SayRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class SayRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Say", Namespace="https://github.com/caifl/wscore", Order=0)]
        public ServiceReference1.SayRequestBody Body;
        
        public SayRequest()
        {
        }
        
        public SayRequest(ServiceReference1.SayRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://github.com/caifl/wscore")]
    internal partial class SayRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string name;
        
        public SayRequestBody()
        {
        }
        
        public SayRequestBody(string name)
        {
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class SayResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SayResponse", Namespace="https://github.com/caifl/wscore", Order=0)]
        public ServiceReference1.SayResponseBody Body;
        
        public SayResponse()
        {
        }
        
        public SayResponse(ServiceReference1.SayResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="https://github.com/caifl/wscore")]
    internal partial class SayResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SayResult;
        
        public SayResponseBody()
        {
        }
        
        public SayResponseBody(string SayResult)
        {
            this.SayResult = SayResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    internal interface GreetingServiceSoapChannel : ServiceReference1.GreetingServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    internal partial class GreetingServiceSoapClient : System.ServiceModel.ClientBase<ServiceReference1.GreetingServiceSoap>, ServiceReference1.GreetingServiceSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public GreetingServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(GreetingServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), GreetingServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GreetingServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(GreetingServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GreetingServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(GreetingServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GreetingServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.SayResponse ServiceReference1.GreetingServiceSoap.Say(ServiceReference1.SayRequest request)
        {
            return base.Channel.Say(request);
        }
        
        public string Say(string name)
        {
            ServiceReference1.SayRequest inValue = new ServiceReference1.SayRequest();
            inValue.Body = new ServiceReference1.SayRequestBody();
            inValue.Body.name = name;
            ServiceReference1.SayResponse retVal = ((ServiceReference1.GreetingServiceSoap)(this)).Say(inValue);
            return retVal.Body.SayResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.SayResponse> ServiceReference1.GreetingServiceSoap.SayAsync(ServiceReference1.SayRequest request)
        {
            return base.Channel.SayAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.SayResponse> SayAsync(string name)
        {
            ServiceReference1.SayRequest inValue = new ServiceReference1.SayRequest();
            inValue.Body = new ServiceReference1.SayRequestBody();
            inValue.Body.name = name;
            return ((ServiceReference1.GreetingServiceSoap)(this)).SayAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.GreetingServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.GreetingServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.GreetingServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:5001/ws/GreetingService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.GreetingServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:5001/ws/GreetingService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            GreetingServiceSoap,
            
            GreetingServiceSoap12,
        }
    }
}
